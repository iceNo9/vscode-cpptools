name: Build VSIX from Upstream Tag

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: '要构建的Tag名称 (如: v1.0.0)'
        required: true
        type: string

jobs:
  setup:
    name: Setup and Fetch Tag
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/microsoft/vscode-cpptools.git
          git fetch upstream --tags

      - name: List available tags
        run: git tag --list 'v*' | sort -V | tail -10

      - name: Checkout selected tag
        run: |
          git checkout "${{ github.event.inputs.tag_name }}"
          echo "Checked out tag: ${{ github.event.inputs.tag_name }}"

  build:
    name: Build VSIX (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: setup
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag_name }}  # 直接使用输入参数
          fetch-depth: 0

      - name: Checkout the specific tag
        run: git checkout "${{ github.event.inputs.tag_name }}"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        working-directory: Extension

      - name: Compile Sources
        run: yarn run compile
        working-directory: Extension

      - name: Install VSCE
        run: npm install -g @vscode/vsce

      - name: Package VSIX
        run: vsce package --no-dependencies
        working-directory: Extension

      - name: Rename VSIX for Windows (CMD)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          cd Extension
          for %%i in (*.vsix) do ren "%%i" "%%~ni-windows.vsix"

      - name: Rename VSIX for Linux
        if: runner.os == 'Linux'
        run: |
          cd Extension
          for vsix in *.vsix; do
            mv "$vsix" "${vsix%.vsix}-linux.vsix"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-${{ github.event.inputs.tag_name }}-${{ runner.os }}
          path: Extension/*.vsix

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List downloaded artifacts
        run: find ./artifacts -name "*.vsix" || echo "No VSIX files found"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.vsix
          tag_name: ${{ github.event.inputs.tag_name }}-build
          name: "Build for ${{ github.event.inputs.tag_name }}"
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}